geom_rug() +
scale_y_continuous(breaks = seq(0, 70, 2))
d.tracker.summary %>%
ggplot(aes(x = 10, y = overalErrorPercentage)) +
geom_text(aes(label = compound)) +
geom_rug() +
scale_y_continuous(breaks = seq(0, 70, 5))
d.tracker.summary %>%
ggplot(aes(x = 10, y = overalErrorPercentage)) +
geom_text(aes(label = compound)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
d.tracker.summary %>%
ggplot(aes(x = 10, y = overalErrorPercentage)) +
geom_text(aes(label = compound)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
coord_flip()
d.tracker.summary %>%
ggplot(aes(x = 10, y = overalErrorPercentage)) +
geom_text(aes(label = compound)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_text(aes(label = compound)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_text(aes(label = compound), position = position_jitter(.1, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
ggExtra::ggMarginal()
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
ggExtra::ggMarginal(plt.tracjer.2)
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
ggExtra::ggMarginal(plt.tracjer.2)
ggExtra::ggMarginal(plt.tracjer.2, margins = y)
ggExtra::ggMarginal(plt.tracjer.2, margins = overalErrorPercentage)
?ggExtra::ggMarginal()
ggExtra::ggMarginal(plt.tracjer.2, margins = "overalErrorPercentage")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) %>%
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5))
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound), position = position_jitter(.2, 0)) +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound), position = position_jitter(.2, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound),
position = position_jitter(.3, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound),
position = position_jitter(.4, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound),
position = position_jitter(.4, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None") +
labs(x = "", y = "Peak area overal error percentage ")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound),
position = position_jitter(.4, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None") +
labs(x = " ", y = "Peak area overal error percentage ")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound),
position = position_jitter(.4, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None") +
labs(x = " ", y = "Peak area overal error percentage ", title = "Error distribution")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound),
position = position_jitter(.4, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None") +
labs(x = " ", y = "Peak area overal error percentage ")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
plt.tracjer.1 =
d.tracker %>%
# filter(compound == "Serine") %>%
ggplot(aes(x = elapse.hour, y = peakArea.norm, color = compound, fill = compound)) +
geom_line(aes(group = compound)) +
geom_point(size = 2.5, fill = "white", stroke = 2, aes(shape = Seq)) +
facet_wrap(~compound) +
coord_cartesian(ylim = c(0.5, 1.5)) +
theme(strip.text = element_text(size = 10),
legend.position = "None") +
scale_shape_manual(values = c(16, 21)) +
geom_ribbon(aes(ymin = 0.8, ymax = 1.20, xmin = 0, xmax = 100), alpha = .1, color = NA, fill = "darkgreen") +
labs(x = "Time elapsed (hours)", y = "Normalized peak area", caption = "Green shaded area: 80~120 % error region; solid and empty circle for 1st and 2nd sequence, respectively") +
geom_text(data = d.tracker.summary, # %>% filter(compound == "Serine"),
aes(x = 50, y = 1.4, label = paste("Max ~ min range\nfold change = ", round(signalRange, 2))),
color = "black", fontface = "bold", size = 3.5) +
geom_text(data = d.tracker.summary, # %>% filter(compound == "Serine"),
aes(x = 50, y = 0.6, label = paste("Overal error % = ", round(overalErrorPercentage, 2))),
color = "firebrick", fontface = "bold", size = 4)
plt.tracjer.1
# plot 2
plt.tracjer.2 = d.tracker.summary %>%
ggplot(aes(x = "1", y = overalErrorPercentage, color = compound)) +
geom_point(alpha = 0) +
geom_text(aes(label = compound),
position = position_jitter(.4, 0), fontface = "bold") +
geom_rug(color = "darkgreen") +
scale_y_continuous(breaks = seq(0, 70, 5)) +
theme(legend.position = "None") +
labs(x = " ", y = "Peak area overall error percentage ")
ggExtra::ggMarginal(plt.tracjer.2, margins = "y")
setwd("/Users/Boyuan/Desktop/Harvard/Markdown notebook")
getwd()
rmarkdown::render_site()
setwd("/Users/Boyuan/Desktop/Harvard/Markdown notebook/Harvard-notebook")
getwd()
rmarkdown::render_site()
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
getwd()
rmarkdown::render_site()
rmarkdown::render_site()
<br><br><br><br><br><br>
rmarkdown::render_site()
library(tidyverse)
library(rebus)
library(readxl)
library(RColorBrewer)
library(gridExtra)
library(cowplot)
library(broom)
library(ggpubr)
# theme
theme_set(theme_bw() +
theme(strip.background = element_blank(),
axis.text = element_text(color = "black", size = 13),
axis.title = element_text(color = "black", size = 13, face = "bold"),
strip.text = element_text(face = "bold", size = 13),
panel.grid = element_blank(),
legend.title = element_text(size = 13),
legend.text = element_text(size = 13)))
# significant notation
# single value
sigStar =function(x){
if (x > 0.05){ star = " "} else{
if (x>= 0.01) { star = "*"} else {
if (x >= 0.001) { star = "**"} else {
if (x >= 0.0001) { star = "***" } else {
star = "****"
}
}
}
}
return(star)
}
# multiple values in a single vector
sigStarS = function(vector){
output = c()
for (a in vector) {
output = append(output, sigStar(a))
}
return(output)
}
# food intake -<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>-
path = "/Users/Boyuan/Desktop/Harvard/Research/mice data.xlsx"
d.foodIntake = read_excel(path, sheet = "food intake", range = "A30:AB49")
# filter out mice #1, #7 and #9 which developed ulceration
d.foodIntake = d.foodIntake %>% filter(!mice %in% c(1, 7, 9))
d.foodIntake.tidy = d.foodIntake %>%  select(-c(`-6D`, `-5D`)) %>%
gather(-c(mice, treatment), key = days, value = foodIntake) %>%
mutate(foodIntake = foodIntake %>% as.numeric(),
days = days %>% str_remove("D") %>% as.numeric())
d.foodIntake.summary = d.foodIntake.tidy %>%
group_by(treatment, days) %>%
summarise(foodIntake.mean = mean(foodIntake, na.rm = T),
foodIntake.sd = sd(foodIntake, na.rm = T))
# version 1
plt.dailyFoodIntake.1 = d.foodIntake.tidy[complete.cases(d.foodIntake.tidy), ] %>%
ggplot(aes(x = days, y = foodIntake, color = treatment)) +
geom_line(aes(group = mice), alpha = .5,
position = position_dodge(0)) +
# geom_point() +
# overall trend
geom_line(data = d.foodIntake.summary,
aes(color = treatment, y = foodIntake.mean),
size = 3) +
geom_point(data = d.foodIntake.summary,
aes(color = treatment, y = foodIntake.mean),
size = 4, shape = 21, stroke = 1, fill = "white") +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Days", y = "Daily food intake (g)",
caption = "1~4 million LLC cells (in 200 uL saline) injected at 0-day") +
# add p value
geom_segment(x = 19, xend = 19, y = 5, yend = 4.6,
arrow = arrow(length = unit(.02, "npc"), type = "closed"),
color = "black") +
annotate("text", x = 18, y = 5.2, label = "p = 0.18")+
# add tumor injection label
geom_segment(x = 0, xend = 0, y = 1.5, yend = 2.3,
arrow = arrow(length = unit(.02, "npc"), type = "closed"),
color = "black") +
annotate("text", x = 0, y = 1.2, label = "LLC injection", size = 5)+
scale_y_continuous(limits = c(1, 6.5),
breaks = seq(2, 6, by = 1))
# plt.dailyFoodIntake.1
# version 2
plt.dailyFoodIntake.2 = d.foodIntake.summary %>%
ggplot(aes(x = days, y = foodIntake.mean, color = treatment, fill = treatment)) +
# 1 std range
geom_ribbon( aes(ymin = foodIntake.mean - foodIntake.sd,
ymax = foodIntake.mean + foodIntake.sd, x = days),
alpha = .2, size = .1) +
# 2 std range
geom_ribbon( aes(ymin = foodIntake.mean - foodIntake.sd * 2,
ymax = foodIntake.mean + foodIntake.sd * 2, x = days),
alpha = 0, lty = "dashed") +
geom_line(size = 3) +
geom_point(shape = 21, fill = "white", size = 4, stroke = 1) +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Days", y = "Daily food intake (g)",
caption = "1~4 million LLC cells (in 200 uL saline) injected at 0-day") +
# add p value
geom_segment(x = 19, xend = 19, y = 5, yend = 4.6,
arrow = arrow(length = unit(.02, "npc"), type = "closed"),
color = "black") +
annotate("text", x = 18, y = 5.2, label = "p = 0.18") +
scale_y_continuous(limits = c(1, 6.5),
breaks = seq(2, 6, by = 1)) +
# add tumor injection label
geom_segment(x = 0, xend = 0, y = 1.5, yend = 2.3,
arrow = arrow(length = unit(.02, "npc"), type = "closed"),
color = "black") +
annotate("text", x = 0, y = 1.2, label = "LLC injection", size = 5)
# plt.dailyFoodIntake.2
plt.dailyFoodIntake =
plot_grid(plt.dailyFoodIntake.1, plt.dailyFoodIntake.2, nrow = 1)
# do t-test
hh = d.foodIntake.tidy %>% filter(days == 19)
t.test(hh$foodIntake ~ hh$treatment, var.equal = T)
# accumulated food intake
d.foodIntake.tidy.missing.replaced =
d.foodIntake.tidy%>%
filter(days >=0) %>% # count from the zero day of tumor injection
group_by(days, treatment) %>%
# replace missing value with the average for treatment-day group
mutate(foodIntake = replace_na(foodIntake, replace = mean(foodIntake, na.rm = T)))
d.foodIntake.accumulated.tidy = d.foodIntake.tidy.missing.replaced %>%
group_by(treatment, mice) %>%
summarise(foodIntake.accumulated = sum(foodIntake))
d.foodIntake.accumulated.summary =
d.foodIntake.accumulated.tidy %>%
group_by(treatment) %>%
summarise(foodIntake.accumulated.mean = mean(foodIntake.accumulated),
foodIntake.accumulated.sd = sd(foodIntake.accumulated))
d.foodIntake.accumulated.summary %>%
ggplot(aes(x = treatment, y = foodIntake.accumulated.mean, color = treatment, fill = treatment)) +
geom_bar(stat = "identity", alpha = .6, size = 1)  +
geom_errorbar(aes(ymin = foodIntake.accumulated.mean - foodIntake.accumulated.sd,
ymax = foodIntake.accumulated.mean + foodIntake.accumulated.sd),
width = .5, size = 1) +
# geom_point(data = d.foodIntake.accumulated.tidy,
#            aes(y = foodIntake.accumulated),
#            shape = 21, fill = "white", size = 3,stroke = 1, position = position_jitter(.2, 0)) +
geom_label(data = d.foodIntake.accumulated.tidy,
aes(y = foodIntake.accumulated, label = mice),
size = 4, fill = "white", fontface = "bold", position = position_jitter(.3, 0)) +
labs(y = "Accumulated food intake (g) over 19 days since LLC injection") +
scale_y_continuous(breaks = seq(0, 100, 20))
# Body weight -<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>--<>-
d.bodyWeight = read_excel(path, sheet = "body weight", range = "A2:AL24")
# filter out mice #1, #7 and #9 which developed ulceration
d.bodyWeight = d.bodyWeight %>% filter(!mice %in% c(1, 7, 9))
# tidy up
d.bodyWeight.tidy = d.bodyWeight %>%
gather(-c(mice, treatment), key = days, value = bodyWeight) %>%
mutate(days = days %>% str_remove("D") %>% as.integer(),
bodyWeight = bodyWeight %>% as.numeric())
d.bodyWeight.tidy = d.bodyWeight.tidy %>% filter(days >= -5)
# summary
d.bodyWeight.tidy.summary = d.bodyWeight.tidy %>%
group_by(days, treatment) %>%
summarise(bodyWeight.mean = mean(bodyWeight, na.rm = T),
bodyWeight.sd = sd(bodyWeight, na.rm = T))
d.bodyWeight.tidy.summary =
d.bodyWeight.tidy.summary[d.bodyWeight.tidy.summary %>% complete.cases(), ]
# plot
# version 1
d.bodyWeight.tidy = d.bodyWeight.tidy[d.bodyWeight.tidy %>% complete.cases(), ]
plt.bodyweight.1 = d.bodyWeight.tidy %>%
ggplot(aes(x = days, y = bodyWeight, color = treatment, fill = treatment)) +
geom_line(aes(group = mice), alpha = .5) +
# overal trend
geom_line(data = d.bodyWeight.tidy.summary,
aes(x = days, y = bodyWeight.mean),
size = 4) +
geom_point(data = d.bodyWeight.tidy.summary,
aes(x = days, y = bodyWeight.mean),
shape = 21, fill = "white", size = 5, stroke = 1) +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Days", y ="Body weight (g)",
caption = "1~4 million LLC cells (in 200 uL saline) injected at 0-day")
# plt.bodyweight.1
# version 2
plt.bodyweight.2 = d.bodyWeight.tidy.summary %>%
ggplot(aes(x = days, y = bodyWeight.mean, color = treatment, fill = treatment)) +
# 1 std range
geom_ribbon(aes(ymin = bodyWeight.mean - bodyWeight.sd,
ymax = bodyWeight.mean + bodyWeight.sd),
alpha = .2, size = .1) +
# 2 std range
geom_ribbon(aes(ymin = bodyWeight.mean - 2 * bodyWeight.sd,
ymax = bodyWeight.mean + 2 * bodyWeight.sd),
alpha = 0, lty = "dashed") +
# trend line
geom_line(size = 2) +
geom_point(shape = 21, fill = "white", size = 4, stroke = 1) +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Days", y ="Body weight (g)",
caption = "1~4 million LLC cells (in 200 uL saline) injected at 0-day")
plt.bodyweight.2
plt.bodyweight = plot_grid(plt.bodyweight.1, plt.bodyweight.2, nrow = 1)
# combine tumor weight and food intake
d.all.tidy = d.foodIntake.tidy %>%
left_join(d.bodyWeight.tidy, by = c("mice", "days", "treatment")) %>%
mutate(foodIntake.per25gBodyWeight = foodIntake/bodyWeight * 25)
# normalized food intake
d.normalizedFoodIntake = d.all.tidy %>% group_by(treatment, days) %>%
summarise(foodIntake.per25gBodyWeight.mean = mean(foodIntake.per25gBodyWeight, na.rm = T),
foodIntake.per25gBodyWeight.sd = sd(foodIntake.per25gBodyWeight, na.rm = T))
# combine food intake, weight, and body-weight normalized food intake summary data
d.all.summary = d.foodIntake.summary %>%
left_join(d.bodyWeight.tidy.summary, by = c("treatment", "days")) %>%
left_join(d.normalizedFoodIntake, by = c("treatment", "days"))
## plot body weight-normalized food intake
# Version 1
plt.dailyFoodIntake.Normalized.1 =
d.all.tidy[complete.cases(d.all.tidy), ] %>%
ggplot(aes(x = days, y = foodIntake.per25gBodyWeight, color = treatment)) +
geom_line(aes(group = mice), alpha = .5) +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Days", y = "Normalized daily food intake / 25 g body weight") +
geom_line(data = d.all.summary[complete.cases(d.all.summary), ],
aes(group = treatment, y = foodIntake.per25gBodyWeight.mean), size = 3) +
geom_point(data = d.all.summary[complete.cases(d.all.summary), ],
aes(group = treatment, y = foodIntake.per25gBodyWeight.mean),
shape = 21, fill = "white", size = 4, stroke = 1) +
# add p value
geom_segment(x = 19, xend = 19, y = 4.5, yend = 4,
arrow = arrow(length = unit(.02, "npc"), type = "closed"),
color = "black") +
annotate("text", x = 18, y = 4.7, label = "p = 0.075")
# plt.dailyFoodIntake.Normalized.1
# version 2
plt.dailyFoodIntake.Normalized.2 =
d.all.summary[complete.cases(d.all.summary), ]  %>%
ggplot(aes(x = days, y = foodIntake.per25gBodyWeight.mean, color = treatment, fill = treatment)) +
# 1 std range
geom_ribbon(aes(ymin = foodIntake.per25gBodyWeight.mean - foodIntake.per25gBodyWeight.sd,
ymax = foodIntake.per25gBodyWeight.mean + foodIntake.per25gBodyWeight.sd),
alpha = .2, size = .1) +
# 2 std range
geom_ribbon(aes(ymin = foodIntake.per25gBodyWeight.mean - 2 * foodIntake.per25gBodyWeight.sd,
ymax = foodIntake.per25gBodyWeight.mean + 2 * foodIntake.per25gBodyWeight.sd),
alpha = 0, lty = "dashed") +
labs(x = "Days", y = "Normalized daily food intake / 25 g body weight") +
# trend line
geom_line(size = 2) +
geom_point(shape = 21, fill = "white", size = 4, stroke = 1) +
scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +
labs(x = "Days", y ="Normalized daily food intake / 25 g body weight") +
# add p value
geom_segment(x = 19, xend = 19, y = 4.5, yend = 4,
arrow = arrow(length = unit(.02, "npc"), type = "closed"),
color = "black") +
annotate("text", x = 18, y = 4.7, label = "p = 0.075")
# plt.dailyFoodIntake.Normalized.2
plt.dailyFoodIntake.Normalized =
plot_grid(plt.dailyFoodIntake.Normalized.1,
plt.dailyFoodIntake.Normalized.2,
nrow = 1)
R # do statistical test
# surgery time
d.surgery = read_excel(path, sheet = "surgery time")
d.surgery$mice = d.surgery$mice %>% factor(levels = d.surgery$mice, ordered = T)
d.surgery %>%
ggplot(aes(x = mice, y = `Total time (min)`, color = treatment, fill = treatment, shape = Ulcer)) +
geom_segment(x = 15, xend = 15, y = 7, yend = 12, color = "black", lty = "dashed" ) +
geom_line(aes(group = 1)) +
geom_point(size = 14, stroke = 3)  +
scale_shape_manual(values = c(T = 1, F= 21)) +
guides(shape = F) +
labs(x = "Mouse label", y = "Surgery time (min) of tissue collection") +
scale_y_continuous(breaks = seq(5, 12, 1)) +
theme(panel.grid.major.y = element_line(size = .1)) +
annotate(geom = "text", x = 12, y = 11, label = "1st day surgery", fontface = "bold", size = 6) +
annotate(geom = "text", x = 18, y = 11, label = "2nd day surgery", fontface = "bold", size = 6)  +
labs(caption = "Empty circles for mouse having ulceraton (surgery as practice)")
# surgery time
d.surgery = read_excel(path, sheet = "surgery time")
d.surgery$mice = d.surgery$mice %>% factor(levels = d.surgery$mice, ordered = T)
d.surgery %>%
ggplot(aes(x = mice, y = `Total time (min)`, color = treatment, fill = treatment, shape = Ulcer)) +
geom_segment(x = 15, xend = 15, y = 7, yend = 12, color = "black", lty = "dashed" ) +
geom_line(aes(group = 1)) +
geom_point(size = 8, stroke = 3)  +
scale_shape_manual(values = c(T = 1, F= 21)) +
guides(shape = F) +
labs(x = "Mouse label", y = "Surgery time (min) of tissue collection") +
scale_y_continuous(breaks = seq(5, 12, 1)) +
theme(panel.grid.major.y = element_line(size = .1)) +
annotate(geom = "text", x = 12, y = 11, label = "1st day surgery", fontface = "bold", size = 6) +
annotate(geom = "text", x = 18, y = 11, label = "2nd day surgery", fontface = "bold", size = 6)  +
labs(caption = "Empty circles for mouse having ulceraton (surgery as practice)")
d.BodyComposition.leanFat %>% select(-c(mice, treatment)) %>%
pairs(pch = 19, cex = 1.5, lower.panel = NULL,
col = color.treatment[d.BodyComposition.leanFat$treatment])
plt.bodyweight = plot_grid(plt.bodyweight.1, plt.bodyweight.2, nrow = 1)
plt.dailyFoodIntake =
plot_grid(plt.dailyFoodIntake.1, plt.dailyFoodIntake.2, nrow = 1)
plt.dailyFoodIntake
plt.dailyFoodIntake =
plot_grid(plt.dailyFoodIntake.1, plt.dailyFoodIntake.2, nrow = 1)
plt.dailyFoodIntake
rmarkdown::render_site()
br(),br(),br(),br()
br<>,br(),br(),br()
